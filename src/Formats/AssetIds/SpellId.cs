using UAlbion.Formats.Assets;

namespace UAlbion.Formats.AssetIds
{
    // ReSharper disable InconsistentNaming
    // ReSharper disable UnusedMember.Global
    public enum SpellId // TODO: Add this info to a JSON file and then auto-generate the enum.
    {
        // DjiKasOffset = 0,
        ThornSnare = 0,
        Unused1 = 1,
        Unused2 = 2,
        Hurry = 3,
        ViewOfLife = 4,
        FrostSplinter = 5,
        FrostCrystal = 6,
        FrostAvalanche = 7,
        LightHealing = 8,
        BlindingSpark = 9,
        BlindingRay = 10,
        BlindingStorm = 11,
        SleepSpores = 12,
        ThornTrap = 13,
        RemoveTrapDK = 14,
        HealParalysis = 15, // Disabled in SpellData
        HealIntoxication = 16,
        HealBlindness = 17,
        HealPoisoning = 18,
        Fungification = 19,
        Light = 20,
        Unused21 = 21,
        Unused22 = 22,
        Unused23 = 23,
        Unused24 = 24,
        Unused25 = 25,
        Unused26 = 26,
        Unused27 = 27,
        Unused28 = 28,
        Unused29 = 29,

        // EnlightenedOneOffset = 30,
        Regeneration = 30,
        MapView = 31,
        Lifebringer = 32,
        Teleporter = 33,
        HealingDC = 34,
        QuickWithdrawal = 35,
        Levitation = 36, // Disabled in SpellData
        Unused37 = 37,
        GoddessWrath = 38,
        Irritation = 39,
        Recuperation = 40,
        Unused41 = 41,
        Unused42 = 42,
        Unused43 = 43,
        Unused44 = 44,
        Unused45 = 45,
        Unused46 = 46,
        Unused47 = 47,
        Unused48 = 48,
        Unused49 = 49,
        Unused50 = 50,
        Unused51 = 51,
        Unused52 = 52,
        Unused53 = 53,
        Unused54 = 54,
        Unused55 = 55,
        Unused56 = 56,
        Unused57 = 57,
        Unused58 = 58,
        Unused59 = 59,

        // DruidOffset = 60,
        Berserk = 60,
        BanishDemon = 61,
        BanishDemons = 62,
        DemonExodus = 63,
        SmallFireball = 64,
        MagicShield = 65,
        HealingD = 66,
        Boasting = 67,
        Shock = 68,
        Panic = 69,
        Unused70 = 70,
        Unused71 = 71,
        Unused72 = 72,
        Unused73 = 73,
        Unused74 = 74,
        Unused75 = 75,
        Unused76 = 76,
        Unused77 = 77,
        Unused78 = 78,
        Unused79 = 79,
        Unused80 = 80,
        Unused81 = 81,
        Unused82 = 82,
        Unused83 = 83,
        Unused84 = 84,
        Unused85 = 85,
        Unused86 = 86,
        Unused87 = 87,
        Unused88 = 88,
        Unused89 = 89,

        // KengetKamulosOffset = 90,
        Fireball = 90,
        LightningStrike = 91,
        FireRain = 92,
        Thunderbolt = 93,
        FireHail = 94,
        Thunderstorm = 95,
        LightningTrap = 96,
        BigLightningTrap = 97,
        LightningMine = 98,
        BigLightningMine = 99,
        StealLife = 100,
        StealMagic = 101,
        PersonalProtection = 102,
        KamulosGaze = 103,
        RemoveTrapKK = 104,
        Unused105 = 105,
        Unused106 = 106,
        Unused107 = 107,
        Unused108 = 108,
        Unused109 = 109,
        Unused110 = 110,
        Unused111 = 111,
        Unused112 = 112,
        Unused113 = 113,
        Unused114 = 114,
        Unused115 = 115,
        Unused116 = 116,
        Unused117 = 117,
        Unused118 = 118,
        Unused119 = 119,

        // UNUSED
        Unused120 = 120,
        Unused121 = 121,
        Unused122 = 122,
        Unused123 = 123,
        Unused124 = 124,
        Unused125 = 125,
        Unused126 = 126,
        Unused127 = 127,
        Unused128 = 128,
        Unused129 = 129,
        Unused130 = 130,
        Unused131 = 131,
        Unused132 = 132,
        Unused133 = 133,
        Unused134 = 134,
        Unused135 = 135,
        Unused136 = 136,
        Unused137 = 137,
        Unused138 = 138,
        Unused139 = 139,
        Unused140 = 140,
        Unused141 = 141,
        Unused142 = 142,
        Unused143 = 143,
        Unused144 = 144,
        Unused145 = 145,
        Unused146 = 146,
        Unused147 = 147,
        Unused148 = 148,
        Unused149 = 149,

        // ZombieOffset = 150
        ZombiePanic = 150,
        ZombiePoisonBreeze = 151,
        ZombieIrritation = 152,
        ZombiePlagueBreeze = 153,
        Unused154 = 154,
        Unused155 = 155,
        Unused156 = 156,
        Unused157 = 157,
        Unused158 = 158,
        Unused159 = 159,
        Unused160 = 160,
        Unused161 = 161,
        Unused162 = 162,
        Unused163 = 163,
        Unused164 = 164,
        Unused165 = 165,
        Unused166 = 166,
        Unused167 = 167,
        Unused168 = 168,
        Unused169 = 169,
        Unused170 = 170,
        Unused171 = 171,
        Unused172 = 172,
        Unused173 = 173,
        Unused174 = 174,
        Unused175 = 175,
        Unused176 = 176,
        Unused177 = 177,
        Unused178 = 178,
        Unused179 = 179,

        // UNUSED
        Unused180 = 180,
        Unused181 = 181,
        Unused182 = 182,
        Unused183 = 183,
        Unused184 = 184,
        Unused185 = 185,
        Unused186 = 186,
        Unused187 = 187,
        Unused188 = 188,
        Unused189 = 189,
        Unused190 = 190,
        Unused191 = 191,
        Unused192 = 192,
        Unused193 = 193,
        Unused194 = 194,
        Unused195 = 195,
        Unused196 = 196,
        Unused197 = 197,
        Unused198 = 198,
        Unused199 = 199,
        Unused200 = 200,
        Unused201 = 201,
        Unused202 = 202,
        Unused203 = 203,
        Unused204 = 204,
        Unused205 = 205,
        Unused206 = 206,
        Unused207 = 207,
        Unused208 = 208,
        Unused209 = 209,
    }

    public static class SpellIdExtensions
    {
        public static SpellId ToSpellId(this SpellClass spellClass, int offset)
            => (SpellId)((int)spellClass * SpellData.MaxSpellsPerClass + offset);
        public static SpellClass ToClass(this SpellId spellId) => (SpellClass)((int)spellId / SpellData.MaxSpellsPerClass);
        public static int ToOffset(this SpellId spellId) => (int) spellId % SpellData.MaxSpellsPerClass;
    }
}
